// animation_test.uws - Fixed version
// Tests animation capabilities with a bouncing square

// Define key codes
let KEY_UP = 0
let KEY_DOWN = 1
let KEY_LEFT = 2
let KEY_RIGHT = 3
let KEY_SPACE = 4
let KEY_ESC = 6

// Initialize player variables
let player_x = 64
let player_y = 64
let player_color = 2
let speed = 2

// Initialize bouncing square
let square_x = 30
let square_y = 30
let square_dx = 2
let square_dy = 2
let square_color = 5

// Animation variables
let frame = 1  // Start at 1 to avoid division by zero
let running = true

// Main animation loop
label main_loop
    // Clear screen
    clear_screen(0)
    
    // Move player based on input
    if is_key_pressed(KEY_UP) and player_y > 5
        player_y = player_y - speed
    endif
    
    if is_key_pressed(KEY_DOWN) and player_y < 123
        player_y = player_y + speed
    endif
    
    if is_key_pressed(KEY_LEFT) and player_x > 5
        player_x = player_x - speed
    endif
    
    if is_key_pressed(KEY_RIGHT) and player_x < 123
        player_x = player_x + speed
    endif
    
    // Change color with space
    if is_key_pressed(KEY_SPACE)
        player_color = (player_color + 1) % 16
    endif
    
    // Draw player
    fill_rect(player_x - 5, player_y - 5, 10, 10, player_color)
    
    // Update bouncing square
    square_x = square_x + square_dx
    square_y = square_y + square_dy
    
    // Bounce off edges
    if square_x < 0 or square_x > 117
        square_dx = -square_dx
    endif
    
    if square_y < 0 or square_y > 117
        square_dy = -square_dy
    endif
    
    // Draw square with pulsating size
    let size = 5 + (frame % 10)
    fill_rect(square_x, square_y, size, size, square_color)
    
    // Draw another bouncing element
    let circle_x = 100 + (frame % 20) - 10
    let circle_y = 50 + (frame / 10) % 20
    
    // Draw "circle" (actually a small square)
    fill_rect(circle_x - 3, circle_y - 3, 6, 6, (frame % 15) + 1)
    
    // Draw frame counter - we'd need to implement text rendering
    // For now, just show a line that gets longer
    draw_line(0, 5, frame % 128, 5, 15)
    
    // Update frame counter
    frame = frame + 1
    
    // Update display
    flip_display()
    
    // Check for exit
    if is_key_pressed(KEY_ESC)
        running = false
    endif
    
    // Continue loop if running
    if running
        goto main_loop
    endif

say "Animation test complete!"
exit
